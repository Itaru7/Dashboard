{"ast":null,"code":"import Axios from 'axios';\nimport config from '../config.json';\nimport { useState, useContext } from 'react';\nimport { ContextFilter } from '../components/filter/ContextFilter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { enableFilter, disableFilter } from '../redux/actions';\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n}; //const dispatch = useDispatch();\n\n\nexport const GetData = async () => {\n  //\tdispatch(disableFilter());\n  const response = await Axios(config.API_URL);\n  await sleep(300);\n  return response;\n};\n_c = GetData;\nexport default GetData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetData\");","map":{"version":3,"sources":["/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/api/app.js"],"names":["Axios","config","useState","useContext","ContextFilter","useSelector","useDispatch","enableFilter","disableFilter","sleep","milliseconds","Promise","resolve","setTimeout","GetData","response","API_URL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;;AAEA,MAAMC,KAAK,GAAIC,YAAD,IAAkB;AAC/B,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,YAAV,CAAjC,CAAP;AACA,CAFD,C,CAIA;;;AAEA,OAAO,MAAMI,OAAO,GAAG,YAAW;AAClC;AACC,QAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACC,MAAM,CAACe,OAAR,CAA5B;AACA,QAAMP,KAAK,CAAC,GAAD,CAAX;AACA,SAAOM,QAAP;AACA,CALM;KAAMD,O;AAOb,eAAeA,OAAf","sourcesContent":["import Axios from 'axios';\nimport config from '../config.json';\nimport { useState, useContext } from 'react';\nimport { ContextFilter } from '../components/filter/ContextFilter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { enableFilter, disableFilter } from '../redux/actions';\n\nconst sleep = (milliseconds) => {\n\treturn new Promise(resolve => setTimeout(resolve, milliseconds))\n};\n\n//const dispatch = useDispatch();\n\nexport const GetData = async() => {\n//\tdispatch(disableFilter());\n\tconst response = await Axios(config.API_URL);\n\tawait sleep(300);\n\treturn response;\n}\n\nexport default GetData;\n"]},"metadata":{},"sourceType":"module"}