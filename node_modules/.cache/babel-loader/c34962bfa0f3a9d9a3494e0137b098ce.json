{"ast":null,"code":"var _jsxFileName = \"/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport Filter from './components/filter/Filter';\nimport { FilterContext } from './contexts/FilterContext';\nimport { DashboardContext } from './contexts/DashboardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    start,\n    end,\n    store,\n    selectedStore\n  } = useContext(FilterContext);\n  const [startDate, setStartDate] = start;\n  const [endDate, setEndDate] = end;\n  const [defaultStore, setDefaultStore] = store;\n  const [newSelectedStore, setNewSelectedStore] = selectedStore;\n  console.log(startDate);\n  console.log(endDate);\n  console.log(defaultStore);\n  console.log(newSelectedStore);\n  const {\n    data\n  } = useContext(DashboardContext);\n  const [t_data, setTData] = data;\n  console.log(t_data);\n\n  function fetchAPI(param) {\n    return fetch('https://randomuser.me/api/');\n  }\n\n  console.log(fetchAPI);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Default(URL) Store: \", defaultStore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Selected Store: \", newSelectedStore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"80+zO65m5jp1hZeiIpmfBA4D1Bc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/App.js"],"names":["useState","useContext","Filter","FilterContext","DashboardContext","App","start","end","store","selectedStore","startDate","setStartDate","endDate","setEndDate","defaultStore","setDefaultStore","newSelectedStore","setNewSelectedStore","console","log","data","t_data","setTData","fetchAPI","param","fetch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAuCR,UAAU,CAACE,aAAD,CAAvD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BL,KAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,GAA9B;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCP,KAAxC;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CR,aAAhD;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAWnB,UAAU,CAACG,gBAAD,CAA3B;AACA,QAAM,CAACiB,MAAD,EAASC,QAAT,IAAqBF,IAA3B;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;;AAEA,WAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,WAAOC,KAAK,CAAC,4BAAD,CAAZ;AACA;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,0CAAyBT,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,sCAAqBE,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;GA5BQX,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import { useState, useContext} from 'react';\nimport Filter from './components/filter/Filter';\nimport { FilterContext } from './contexts/FilterContext';\nimport { DashboardContext } from './contexts/DashboardContext';\n\nfunction App() {\n\tconst { start, end, store, selectedStore } = useContext(FilterContext);\n\tconst [startDate, setStartDate] = start;\n\tconst [endDate, setEndDate] = end;\n\tconst [defaultStore, setDefaultStore] = store;\n\tconst [newSelectedStore, setNewSelectedStore] = selectedStore;\n\tconsole.log(startDate);\n\tconsole.log(endDate);\n\tconsole.log(defaultStore);\n\tconsole.log(newSelectedStore);\n\n\tconst { data } = useContext(DashboardContext);\n\tconst [t_data, setTData] = data;\n\n\tconsole.log(t_data);\n\n\tfunction fetchAPI(param) {\n\t\treturn fetch('https://randomuser.me/api/')\n\t}\n\tconsole.log(fetchAPI);\t\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Filter />\n\t\t\t<p> Default(URL) Store: {defaultStore}</p>\n\t\t\t<p> Selected Store: {newSelectedStore}</p>\n\t\t</div>\n\t  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}