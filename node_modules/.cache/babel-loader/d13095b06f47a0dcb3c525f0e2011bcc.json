{"ast":null,"code":"var _jsxFileName = \"/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/components/filter/ContextFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport Axios from 'axios';\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextFilter = /*#__PURE__*/createContext();\n\nconst ContextFilterProvider = props => {\n  _s();\n\n  // Get store information from accessed URL ex) https://fsai-dash.com/HQ returns HQ.\n  const storeFromUrl = window.location.href.split('/').slice(-1)[0]; // Get default date period.\n\n  const today = new Date();\n  const thisyear = today.getFullYear();\n  const thismonth = today.getMonth();\n  const thisdate = today.getDate();\n  const lastWeekStart = thisdate - today.getDay() - 7;\n  const lastWeekEnd = lastWeekStart + 6; // Set values and setters.\n\n  const r = {\n    \"avg_serv_time\": \"00:00\",\n    \"order_num_total\": 0,\n    \"order_num_total_food\": 0,\n    \"order_num_kiosk_food\": 0,\n    \"order_usage_kiosk_food\": 0,\n    \"order_num_pos_food\": 0,\n    \"order_usage_pos_food\": 0,\n    \"order_num_total_bar\": 0,\n    \"sales_total\": 0,\n    \"sales_total_food\": 0,\n    \"sales_total_bar\": 0,\n    \"usage_by_users\": [{\n      'username': 'userA',\n      \"order_total\": 0,\n      \"order_food\": 0,\n      \"order_bar\": 0,\n      \"order_promo\": 0,\n      \"order_discount\": 0,\n      \"sales_total\": 0,\n      \"sales_food\": 0,\n      \"sales_bar\": 0,\n      \"sales_promo\": 0,\n      \"sales_discount\": 0\n    }, {\n      'username': 'userB',\n      \"order_total\": 0,\n      \"order_food\": 0,\n      \"order_bar\": 0,\n      \"order_promo\": 0,\n      \"order_discount\": 0,\n      \"sales_total\": 0,\n      \"sales_food\": 0,\n      \"sales_bar\": 0,\n      \"sales_promo\": 0,\n      \"sales_discount\": 0\n    }, {\n      'username': 'userC',\n      \"order_total\": 0,\n      \"order_food\": 0,\n      \"order_bar\": 0,\n      \"order_promo\": 0,\n      \"order_discount\": 0,\n      \"sales_total\": 0,\n      \"sales_food\": 0,\n      \"sales_bar\": 0,\n      \"sales_promo\": 0,\n      \"sales_discount\": 0\n    }],\n    \"graph\": {\n      \"promo\": [{\n        label: '01/01/2021',\n        data: 0\n      }, {\n        label: '01/02/2021',\n        data: 0\n      }, {\n        label: '01/03/2021',\n        data: 0\n      }, {\n        label: '01/04/2021',\n        data: 0\n      }, {\n        label: '01/05/2021',\n        data: 0\n      }, {\n        label: '01/06/2021',\n        data: 0\n      }, {\n        label: '01/07/2021',\n        data: 0\n      }],\n      \"discount\": [{\n        label: '01/01/2021',\n        data: 0\n      }, {\n        label: '01/02/2021',\n        data: 0\n      }, {\n        label: '01/03/2021',\n        data: 0\n      }, {\n        label: '01/04/2021',\n        data: 0\n      }, {\n        label: '01/05/2021',\n        data: 0\n      }, {\n        label: '01/06/2021',\n        data: 0\n      }, {\n        label: '01/07/2021',\n        data: 0\n      }]\n    }\n  };\n  const [startDate, setStartDate] = useState(new Date(thisyear, thismonth, lastWeekStart));\n  const [endDate, setEndDate] = useState(new Date(thisyear, thismonth, lastWeekEnd));\n  const store = useState(storeFromUrl)[0];\n  const [selectedStore, setSelectedStore] = useState(storeFromUrl);\n  const [visible, setVisible] = useState(''); // Empty string means false, and all filter components are enabled by default.\n\n  const [dashboardData, setDashboardData] = useState(r); // Set functions.\n\n  const setEnable = () => {\n    setVisible('');\n  };\n\n  const setDisable = () => {\n    setVisible('disabled');\n  };\n\n  const sleep = millsec => {\n    return new Promise(resolve => setTimeout(resolve, millsec));\n  };\n\n  const updateData = async () => {\n    // Expect API to return in this format.\n    // const res = {\n    // \t\"avg_serv_time\": \"00:00\",\n    // \t\"order_num_total\": 1234,\n    // \t\"order_num_total_food\": 1234,\n    // \t\"order_num_kiosk_food\": 1234,\n    // \t\"order_usage_kiosk_food\": 1234,\n    // \t\"order_num_pos_food\": 1234,\n    // \t\"order_usage_pos_food\": 1234,\n    // \t\"order_num_total_bar\": 1234,\n    // \t\"sales_total\": 1234,\n    // \t\"sales_total_food\": 1234,\n    // \t\"sales_total_bar\": 1234,\n    // \t\"usage_by_users\": [\n    // \t\t{'username': 'userA', \"order_total\": 1234, \"order_food\": 1234, \"order_bar\": 1234, \"order_promo\": 1234, \"order_discount\": 1234, \"sales_total\": 1234, \"sales_food\": 1234, \"sales_bar\": 1234, \"sales_promo\": 1234, \"sales_discount\": 1234},\n    // \t\t{'username': 'userB', \"order_total\": 1234, \"order_food\": 1234, \"order_bar\": 1234, \"order_promo\": 1234, \"order_discount\": 1234, \"sales_total\": 1234, \"sales_food\": 1234, \"sales_bar\": 1234, \"sales_promo\": 1234, \"sales_discount\": 1234},\n    // \t\t{'username': 'userC', \"order_total\": 1234, \"order_food\": 1234, \"order_bar\": 1234, \"order_promo\": 1234, \"order_discount\": 1234, \"sales_total\": 1234, \"sales_food\": 1234, \"sales_bar\": 1234, \"sales_promo\": 1234, \"sales_discount\": 1234}\n    // \t],\n    // \t\"graph\": {\n    // \t\t\"promo\": [\n    // \t\t\t{label: '01/01/2021', data: 1234},\n    // \t\t\t{label: '01/02/2021', data: 1234},\n    // \t\t\t{label: '01/03/2021', data: 1234},\n    // \t\t\t{label: '01/04/2021', data: 1234},\n    // \t\t\t{label: '01/05/2021', data: 1234},\n    // \t\t\t{label: '01/06/2021', data: 1234},\n    // \t\t\t{label: '01/07/2021', data: 1234}\n    // \t\t],\n    // \t\t\"discount\": [\n    // \t\t\t{label: '01/01/2021', data: 1234},\n    // \t\t\t{label: '01/02/2021', data: 1234},\n    // \t\t\t{label: '01/03/2021', data: 1234},\n    // \t\t\t{label: '01/04/2021', data: 1234},\n    // \t\t\t{label: '01/05/2021', data: 1234},\n    // \t\t\t{label: '01/06/2021', data: 1234},\n    // \t\t\t{label: '01/07/2021', data: 1234}\n    // \t\t]\n    // \t}\n    // }\n    setVisible('disabled');\n    const response = await Axios(config.API_URL); // request API call here\t\n\n    await sleep(300);\n    setVisible(''); // Below is for the demo.\n    // Comment out when deploying.---------------------------\n\n    const getRandomInt = (min, max) => {\n      let minimum = Math.ceil(min);\n      let maximum = Math.floor(max);\n      return Math.floor(Math.random() * (maximum - minimum) + minimum);\n    };\n\n    const res = {\n      \"avg_serv_time\": \"00:00\",\n      \"order_num_total\": getRandomInt(1000, 10000),\n      \"order_num_total_food\": getRandomInt(1000, 10000),\n      \"order_num_kiosk_food\": getRandomInt(1000, 10000),\n      \"order_usage_kiosk_food\": getRandomInt(0, 100),\n      \"order_num_pos_food\": getRandomInt(1000, 10000),\n      \"order_usage_pos_food\": getRandomInt(0, 100),\n      \"order_num_total_bar\": getRandomInt(1000, 10000),\n      \"sales_total\": getRandomInt(1000, 10000),\n      \"sales_total_food\": getRandomInt(1000, 10000),\n      \"sales_total_bar\": getRandomInt(1000, 10000),\n      \"usage_by_users\": [{\n        'username': 'userA',\n        \"order_total\": getRandomInt(100, 700),\n        \"order_food\": getRandomInt(100, 700),\n        \"order_bar\": getRandomInt(100, 700),\n        \"order_promo\": getRandomInt(100, 700),\n        \"order_discount\": getRandomInt(100, 700),\n        \"sales_total\": getRandomInt(100, 700),\n        \"sales_food\": getRandomInt(100, 700),\n        \"sales_bar\": getRandomInt(100, 700),\n        \"sales_promo\": getRandomInt(100, 700),\n        \"sales_discount\": getRandomInt(100, 700)\n      }, {\n        'username': 'userB',\n        \"order_total\": getRandomInt(100, 700),\n        \"order_food\": getRandomInt(100, 700),\n        \"order_bar\": getRandomInt(100, 700),\n        \"order_promo\": getRandomInt(100, 700),\n        \"order_discount\": getRandomInt(100, 700),\n        \"sales_total\": getRandomInt(100, 700),\n        \"sales_food\": getRandomInt(100, 700),\n        \"sales_bar\": getRandomInt(100, 700),\n        \"sales_promo\": getRandomInt(100, 700),\n        \"sales_discount\": getRandomInt(100, 700)\n      }, {\n        'username': 'userC',\n        \"order_total\": getRandomInt(100, 700),\n        \"order_food\": getRandomInt(100, 700),\n        \"order_bar\": getRandomInt(100, 700),\n        \"order_promo\": getRandomInt(100, 700),\n        \"order_discount\": getRandomInt(100, 700),\n        \"sales_total\": getRandomInt(100, 700),\n        \"sales_food\": getRandomInt(100, 700),\n        \"sales_bar\": getRandomInt(100, 700),\n        \"sales_promo\": getRandomInt(100, 700),\n        \"sales_discount\": getRandomInt(100, 700)\n      }],\n      \"graph\": {\n        \"promo\": [{\n          label: '01/01/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/02/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/03/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/04/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/05/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/06/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/07/2021',\n          data: getRandomInt(1, 20)\n        }],\n        \"discount\": [{\n          label: '01/01/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/02/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/03/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/04/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/05/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/06/2021',\n          data: getRandomInt(1, 20)\n        }, {\n          label: '01/07/2021',\n          data: getRandomInt(1, 20)\n        }]\n      }\n    }; // ------------------------------------------------------\n\n    setDashboardData(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContextFilter.Provider, {\n    value: {\n      stateStart: [startDate, setStartDate],\n      stateEnd: [endDate, setEndDate],\n      valueInitialStore: store,\n      stateCurrentStore: [selectedStore, setSelectedStore],\n      stateVisible: [visible, setVisible],\n      stateDashboardData: [dashboardData, setDashboardData],\n      funcDisableFilters: setDisable,\n      funcEnableFilters: setEnable,\n      funcUpdateData: updateData\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContextFilterProvider, \"EzLYPF/6NGXxKkYoJw3e9uVtues=\");\n\n_c = ContextFilterProvider;\nexport default ContextFilterProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextFilterProvider\");","map":{"version":3,"sources":["/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/components/filter/ContextFilter.js"],"names":["React","createContext","useState","Axios","config","ContextFilter","ContextFilterProvider","props","storeFromUrl","window","location","href","split","slice","today","Date","thisyear","getFullYear","thismonth","getMonth","thisdate","getDate","lastWeekStart","getDay","lastWeekEnd","r","label","data","startDate","setStartDate","endDate","setEndDate","store","selectedStore","setSelectedStore","visible","setVisible","dashboardData","setDashboardData","setEnable","setDisable","sleep","millsec","Promise","resolve","setTimeout","updateData","response","API_URL","getRandomInt","min","max","minimum","Math","ceil","maximum","floor","random","res","stateStart","stateEnd","valueInitialStore","stateCurrentStore","stateVisible","stateDashboardData","funcDisableFilters","funcEnableFilters","funcUpdateData","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,EAAnC;;AACP,MAAMK,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACxC;AACA,QAAMC,YAAY,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,CAAC,CAAvC,EAA0C,CAA1C,CAArB,CAFwC,CAGxC;;AACA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAjB;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACK,QAAN,EAAlB;AACA,QAAMC,QAAQ,GAAGN,KAAK,CAACO,OAAN,EAAjB;AACA,QAAMC,aAAa,GAAGF,QAAQ,GAAGN,KAAK,CAACS,MAAN,EAAX,GAA4B,CAAlD;AACA,QAAMC,WAAW,GAAGF,aAAa,GAAG,CAApC,CATwC,CAWxC;;AACA,QAAMG,CAAC,GAAG;AACR,qBAAiB,OADT;AAER,uBAAmB,CAFX;AAGR,4BAAwB,CAHhB;AAIR,4BAAwB,CAJhB;AAKR,8BAA0B,CALlB;AAMR,0BAAsB,CANd;AAOR,4BAAwB,CAPhB;AAQR,2BAAuB,CARf;AASR,mBAAe,CATP;AAUR,wBAAoB,CAVZ;AAWR,uBAAmB,CAXX;AAYR,sBAAkB,CACjB;AAAC,kBAAY,OAAb;AAAsB,qBAAe,CAArC;AAAwC,oBAAc,CAAtD;AAAyD,mBAAa,CAAtE;AAAyE,qBAAe,CAAxF;AAA2F,wBAAkB,CAA7G;AAAgH,qBAAe,CAA/H;AAAkI,oBAAc,CAAhJ;AAAmJ,mBAAa,CAAhK;AAAmK,qBAAe,CAAlL;AAAqL,wBAAkB;AAAvM,KADiB,EAEjB;AAAC,kBAAY,OAAb;AAAsB,qBAAe,CAArC;AAAwC,oBAAc,CAAtD;AAAyD,mBAAa,CAAtE;AAAyE,qBAAe,CAAxF;AAA2F,wBAAkB,CAA7G;AAAgH,qBAAe,CAA/H;AAAkI,oBAAc,CAAhJ;AAAmJ,mBAAa,CAAhK;AAAmK,qBAAe,CAAlL;AAAqL,wBAAkB;AAAvM,KAFiB,EAGjB;AAAC,kBAAY,OAAb;AAAsB,qBAAe,CAArC;AAAwC,oBAAc,CAAtD;AAAyD,mBAAa,CAAtE;AAAyE,qBAAe,CAAxF;AAA2F,wBAAkB,CAA7G;AAAgH,qBAAe,CAA/H;AAAkI,oBAAc,CAAhJ;AAAmJ,mBAAa,CAAhK;AAAmK,qBAAe,CAAlL;AAAqL,wBAAkB;AAAvM,KAHiB,CAZV;AAiBR,aAAS;AACR,eAAS,CACR;AAACC,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OADQ,EAER;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAFQ,EAGR;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAHQ,EAIR;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAJQ,EAKR;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OALQ,EAMR;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OANQ,EAOR;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAPQ,CADD;AAUR,kBAAY,CACX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OADW,EAEX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAFW,EAGX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAHW,EAIX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAJW,EAKX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OALW,EAMX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OANW,EAOX;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAPW;AAVJ;AAjBD,GAAV;AAsCA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8B3B,QAAQ,CAAC,IAAIa,IAAJ,CAASC,QAAT,EAAmBE,SAAnB,EAA8BI,aAA9B,CAAD,CAA5C;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAA0B7B,QAAQ,CAAC,IAAIa,IAAJ,CAASC,QAAT,EAAmBE,SAAnB,EAA8BM,WAA9B,CAAD,CAAxC;AACA,QAAMQ,KAAK,GAAG9B,QAAQ,CAACM,YAAD,CAAR,CAAuB,CAAvB,CAAd;AACA,QAAM,CAAEyB,aAAF,EAAiBC,gBAAjB,IAAsChC,QAAQ,CAACM,YAAD,CAApD;AACA,QAAM,CAAE2B,OAAF,EAAWC,UAAX,IAA0BlC,QAAQ,CAAC,EAAD,CAAxC,CAtDwC,CAsDO;;AAC/C,QAAM,CAAEmC,aAAF,EAAiBC,gBAAjB,IAAsCpC,QAAQ,CAACuB,CAAD,CAApD,CAvDwC,CA0DxC;;AACA,QAAMc,SAAS,GAAG,MAAM;AAAEH,IAAAA,UAAU,CAAC,EAAD,CAAV;AAAiB,GAA3C;;AACA,QAAMI,UAAU,GAAG,MAAM;AAAEJ,IAAAA,UAAU,CAAC,UAAD,CAAV;AAAyB,GAApD;;AACA,QAAMK,KAAK,GAAIC,OAAD,IAAa;AAAE,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAjC,CAAP;AAA4D,GAAzF;;AACA,QAAMI,UAAU,GAAG,YAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAV,IAAAA,UAAU,CAAC,UAAD,CAAV;AACA,UAAMW,QAAQ,GAAG,MAAM5C,KAAK,CAACC,MAAM,CAAC4C,OAAR,CAA5B,CA1C6B,CA0CkB;;AAC/C,UAAMP,KAAK,CAAC,GAAD,CAAX;AACAL,IAAAA,UAAU,CAAC,EAAD,CAAV,CA5C6B,CA8C7B;AACA;;AACA,UAAMa,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC,UAAIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAd;AACA,UAAIK,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWL,GAAX,CAAd;AACA,aAAOE,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,MAAiBF,OAAO,GAAGH,OAA3B,IAAsCA,OAAjD,CAAP;AACA,KAJD;;AAMA,UAAMM,GAAG,GAAG;AACX,uBAAiB,OADN;AAEX,yBAAmBT,YAAY,CAAC,IAAD,EAAO,KAAP,CAFpB;AAGX,8BAAwBA,YAAY,CAAC,IAAD,EAAO,KAAP,CAHzB;AAIX,8BAAwBA,YAAY,CAAC,IAAD,EAAO,KAAP,CAJzB;AAKX,gCAA0BA,YAAY,CAAC,CAAD,EAAI,GAAJ,CAL3B;AAMX,4BAAsBA,YAAY,CAAC,IAAD,EAAO,KAAP,CANvB;AAOX,8BAAyBA,YAAY,CAAC,CAAD,EAAI,GAAJ,CAP1B;AAQX,6BAAwBA,YAAY,CAAC,IAAD,EAAO,KAAP,CARzB;AASX,qBAAgBA,YAAY,CAAC,IAAD,EAAO,KAAP,CATjB;AAUX,0BAAqBA,YAAY,CAAC,IAAD,EAAO,KAAP,CAVtB;AAWX,yBAAoBA,YAAY,CAAC,IAAD,EAAO,KAAP,CAXrB;AAYX,wBAAkB,CACjB;AAAC,oBAAY,OAAb;AAAsB,uBAAgBA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAlD;AAA8D,sBAAcA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAxF;AAAoG,qBAAaA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA7H;AAAyI,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAApK;AAAgL,0BAAkBA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA9M;AAA0N,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAArP;AAAiQ,sBAAcA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA3R;AAAuS,qBAAaA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAhU;AAA4U,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAvW;AAAmX,0BAAkBA,YAAY,CAAC,GAAD,EAAM,GAAN;AAAjZ,OADiB,EAEjB;AAAC,oBAAY,OAAb;AAAsB,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAjD;AAA6D,sBAAcA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAvF;AAAmG,qBAAaA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA5H;AAAwI,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAnK;AAA+K,0BAAkBA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA7M;AAAyN,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAApP;AAAgQ,sBAAcA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA1R;AAAsS,qBAAaA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA/T;AAA2U,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAtW;AAAkX,0BAAkBA,YAAY,CAAC,GAAD,EAAM,GAAN;AAAhZ,OAFiB,EAGjB;AAAC,oBAAY,OAAb;AAAsB,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAjD;AAA6D,sBAAcA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAvF;AAAmG,qBAAaA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA5H;AAAwI,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAnK;AAA+K,0BAAkBA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA7M;AAAyN,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAApP;AAAgQ,sBAAcA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA1R;AAAsS,qBAAaA,YAAY,CAAC,GAAD,EAAM,GAAN,CAA/T;AAA2U,uBAAeA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAtW;AAAkX,0BAAkBA,YAAY,CAAC,GAAD,EAAM,GAAN;AAAhZ,OAHiB,CAZP;AAiBX,eAAS;AACR,iBAAS,CACR;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SADQ,EAER;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAFQ,EAGR;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAHQ,EAIR;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAJQ,EAKR;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SALQ,EAMR;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SANQ,EAOR;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAPQ,CADD;AAUR,oBAAY,CACX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SADW,EAEX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAFW,EAGX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAHW,EAIX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAJW,EAKX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SALW,EAMX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SANW,EAOX;AAACvB,UAAAA,KAAK,EAAE,YAAR;AAAsBC,UAAAA,IAAI,EAAEsB,YAAY,CAAC,CAAD,EAAI,EAAJ;AAAxC,SAPW;AAVJ;AAjBE,KAAZ,CAtD6B,CA4F7B;;AACAX,IAAAA,gBAAgB,CAACoB,GAAD,CAAhB;AACA,GA9FD;;AAkGA,sBACC,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACxBC,MAAAA,UAAU,EAAE,CAAC/B,SAAD,EAAYC,YAAZ,CADY;AAExB+B,MAAAA,QAAQ,EAAE,CAAC9B,OAAD,EAAUC,UAAV,CAFc;AAGxB8B,MAAAA,iBAAiB,EAAE7B,KAHK;AAIxB8B,MAAAA,iBAAiB,EAAE,CAAC7B,aAAD,EAAgBC,gBAAhB,CAJK;AAKxB6B,MAAAA,YAAY,EAAE,CAAC5B,OAAD,EAAUC,UAAV,CALU;AAMxB4B,MAAAA,kBAAkB,EAAE,CAAC3B,aAAD,EAAgBC,gBAAhB,CANI;AAOxB2B,MAAAA,kBAAkB,EAAEzB,UAPI;AAQxB0B,MAAAA,iBAAiB,EAAE3B,SARK;AASxB4B,MAAAA,cAAc,EAAErB;AATQ,KAA/B;AAAA,cAYEvC,KAAK,CAAC6D;AAZR;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAhLD;;GAAM9D,qB;;KAAAA,qB;AAkLN,eAAeA,qBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport Axios from 'axios';\nimport config from '../../config.json';\n\nexport const ContextFilter = createContext();\nconst ContextFilterProvider = (props) => {\n\t// Get store information from accessed URL ex) https://fsai-dash.com/HQ returns HQ.\n\tconst storeFromUrl = window.location.href.split('/').slice(-1)[0]\n\t// Get default date period.\n\tconst today = new Date();\n\tconst thisyear = today.getFullYear();\n\tconst thismonth = today.getMonth(); \n\tconst thisdate = today.getDate();\n\tconst lastWeekStart = thisdate - today.getDay() - 7;\n\tconst lastWeekEnd = lastWeekStart + 6;\n\n\t// Set values and setters.\n\tconst r = {\n\t\t\t\"avg_serv_time\": \"00:00\",\n\t\t\t\"order_num_total\": 0,\n\t\t\t\"order_num_total_food\": 0,\n\t\t\t\"order_num_kiosk_food\": 0,\n\t\t\t\"order_usage_kiosk_food\": 0,\n\t\t\t\"order_num_pos_food\": 0,\n\t\t\t\"order_usage_pos_food\": 0,\n\t\t\t\"order_num_total_bar\": 0,\n\t\t\t\"sales_total\": 0,\n\t\t\t\"sales_total_food\": 0,\n\t\t\t\"sales_total_bar\": 0,\n\t\t\t\"usage_by_users\": [\n\t\t\t\t{'username': 'userA', \"order_total\": 0, \"order_food\": 0, \"order_bar\": 0, \"order_promo\": 0, \"order_discount\": 0, \"sales_total\": 0, \"sales_food\": 0, \"sales_bar\": 0, \"sales_promo\": 0, \"sales_discount\": 0},\n\t\t\t\t{'username': 'userB', \"order_total\": 0, \"order_food\": 0, \"order_bar\": 0, \"order_promo\": 0, \"order_discount\": 0, \"sales_total\": 0, \"sales_food\": 0, \"sales_bar\": 0, \"sales_promo\": 0, \"sales_discount\": 0},\n\t\t\t\t{'username': 'userC', \"order_total\": 0, \"order_food\": 0, \"order_bar\": 0, \"order_promo\": 0, \"order_discount\": 0, \"sales_total\": 0, \"sales_food\": 0, \"sales_bar\": 0, \"sales_promo\": 0, \"sales_discount\": 0}\n\t\t\t],\n\t\t\t\"graph\": {\n\t\t\t\t\"promo\": [\n\t\t\t\t\t{label: '01/01/2021', data: 0},\n\t\t\t\t\t{label: '01/02/2021', data: 0},\n\t\t\t\t\t{label: '01/03/2021', data: 0},\n\t\t\t\t\t{label: '01/04/2021', data: 0},\n\t\t\t\t\t{label: '01/05/2021', data: 0},\n\t\t\t\t\t{label: '01/06/2021', data: 0},\n\t\t\t\t\t{label: '01/07/2021', data: 0}\n\t\t\t\t],\n\t\t\t\t\"discount\": [\n\t\t\t\t\t{label: '01/01/2021', data: 0},\n\t\t\t\t\t{label: '01/02/2021', data: 0},\n\t\t\t\t\t{label: '01/03/2021', data: 0},\n\t\t\t\t\t{label: '01/04/2021', data: 0},\n\t\t\t\t\t{label: '01/05/2021', data: 0},\n\t\t\t\t\t{label: '01/06/2021', data: 0},\n\t\t\t\t\t{label: '01/07/2021', data: 0}\n\t\t\t\t]\n\t\t\t}\n\t}\n\tconst [ startDate, setStartDate ] = useState(new Date(thisyear, thismonth, lastWeekStart));\n\tconst [ endDate, setEndDate ] = useState(new Date(thisyear, thismonth, lastWeekEnd));\n\tconst store = useState(storeFromUrl)[0];\n\tconst [ selectedStore, setSelectedStore ] = useState(storeFromUrl);\n\tconst [ visible, setVisible ] = useState('');  // Empty string means false, and all filter components are enabled by default.\n\tconst [ dashboardData, setDashboardData ] = useState(r);\n\n\n\t// Set functions.\n\tconst setEnable = () => { setVisible(''); };\n\tconst setDisable = () => { setVisible('disabled'); };\n\tconst sleep = (millsec) => { return new Promise(resolve => setTimeout(resolve, millsec))};\n\tconst updateData = async() => {\n\t\t// Expect API to return in this format.\n\t\t// const res = {\n\t\t// \t\"avg_serv_time\": \"00:00\",\n\t\t// \t\"order_num_total\": 1234,\n\t\t// \t\"order_num_total_food\": 1234,\n\t\t// \t\"order_num_kiosk_food\": 1234,\n\t\t// \t\"order_usage_kiosk_food\": 1234,\n\t\t// \t\"order_num_pos_food\": 1234,\n\t\t// \t\"order_usage_pos_food\": 1234,\n\t\t// \t\"order_num_total_bar\": 1234,\n\t\t// \t\"sales_total\": 1234,\n\t\t// \t\"sales_total_food\": 1234,\n\t\t// \t\"sales_total_bar\": 1234,\n\t\t// \t\"usage_by_users\": [\n\t\t// \t\t{'username': 'userA', \"order_total\": 1234, \"order_food\": 1234, \"order_bar\": 1234, \"order_promo\": 1234, \"order_discount\": 1234, \"sales_total\": 1234, \"sales_food\": 1234, \"sales_bar\": 1234, \"sales_promo\": 1234, \"sales_discount\": 1234},\n\t\t// \t\t{'username': 'userB', \"order_total\": 1234, \"order_food\": 1234, \"order_bar\": 1234, \"order_promo\": 1234, \"order_discount\": 1234, \"sales_total\": 1234, \"sales_food\": 1234, \"sales_bar\": 1234, \"sales_promo\": 1234, \"sales_discount\": 1234},\n\t\t// \t\t{'username': 'userC', \"order_total\": 1234, \"order_food\": 1234, \"order_bar\": 1234, \"order_promo\": 1234, \"order_discount\": 1234, \"sales_total\": 1234, \"sales_food\": 1234, \"sales_bar\": 1234, \"sales_promo\": 1234, \"sales_discount\": 1234}\n\t\t// \t],\n\t\t// \t\"graph\": {\n\t\t// \t\t\"promo\": [\n\t\t// \t\t\t{label: '01/01/2021', data: 1234},\n\t\t// \t\t\t{label: '01/02/2021', data: 1234},\n\t\t// \t\t\t{label: '01/03/2021', data: 1234},\n\t\t// \t\t\t{label: '01/04/2021', data: 1234},\n\t\t// \t\t\t{label: '01/05/2021', data: 1234},\n\t\t// \t\t\t{label: '01/06/2021', data: 1234},\n\t\t// \t\t\t{label: '01/07/2021', data: 1234}\n\t\t// \t\t],\n\t\t// \t\t\"discount\": [\n\t\t// \t\t\t{label: '01/01/2021', data: 1234},\n\t\t// \t\t\t{label: '01/02/2021', data: 1234},\n\t\t// \t\t\t{label: '01/03/2021', data: 1234},\n\t\t// \t\t\t{label: '01/04/2021', data: 1234},\n\t\t// \t\t\t{label: '01/05/2021', data: 1234},\n\t\t// \t\t\t{label: '01/06/2021', data: 1234},\n\t\t// \t\t\t{label: '01/07/2021', data: 1234}\n\t\t// \t\t]\n\t\t// \t}\n\t\t// }\n\n\t\tsetVisible('disabled');\n\t\tconst response = await Axios(config.API_URL);  // request API call here\t\n\t\tawait sleep(300);\n\t\tsetVisible('');\n\n\t\t// Below is for the demo.\n\t\t// Comment out when deploying.---------------------------\n\t\tconst getRandomInt = (min, max) => {\n\t\t\tlet minimum = Math.ceil(min);\n\t\t\tlet maximum = Math.floor(max);\n\t\t\treturn Math.floor(Math.random() * (maximum - minimum) + minimum);\n\t\t}\n\n\t\tconst res = {\n\t\t\t\"avg_serv_time\": \"00:00\",\n\t\t\t\"order_num_total\": getRandomInt(1000, 10000),\n\t\t\t\"order_num_total_food\": getRandomInt(1000, 10000),\n\t\t\t\"order_num_kiosk_food\": getRandomInt(1000, 10000),\n\t\t\t\"order_usage_kiosk_food\": getRandomInt(0, 100),\n\t\t\t\"order_num_pos_food\": getRandomInt(1000, 10000),\n\t\t\t\"order_usage_pos_food\":  getRandomInt(0, 100),\n\t\t\t\"order_num_total_bar\":  getRandomInt(1000, 10000),\n\t\t\t\"sales_total\":  getRandomInt(1000, 10000),\n\t\t\t\"sales_total_food\":  getRandomInt(1000, 10000),\n\t\t\t\"sales_total_bar\":  getRandomInt(1000, 10000),\n\t\t\t\"usage_by_users\": [\n\t\t\t\t{'username': 'userA', \"order_total\":  getRandomInt(100, 700), \"order_food\": getRandomInt(100, 700), \"order_bar\": getRandomInt(100, 700), \"order_promo\": getRandomInt(100, 700), \"order_discount\": getRandomInt(100, 700), \"sales_total\": getRandomInt(100, 700), \"sales_food\": getRandomInt(100, 700), \"sales_bar\": getRandomInt(100, 700), \"sales_promo\": getRandomInt(100, 700), \"sales_discount\": getRandomInt(100, 700)},\n\t\t\t\t{'username': 'userB', \"order_total\": getRandomInt(100, 700), \"order_food\": getRandomInt(100, 700), \"order_bar\": getRandomInt(100, 700), \"order_promo\": getRandomInt(100, 700), \"order_discount\": getRandomInt(100, 700), \"sales_total\": getRandomInt(100, 700), \"sales_food\": getRandomInt(100, 700), \"sales_bar\": getRandomInt(100, 700), \"sales_promo\": getRandomInt(100, 700), \"sales_discount\": getRandomInt(100, 700)},\n\t\t\t\t{'username': 'userC', \"order_total\": getRandomInt(100, 700), \"order_food\": getRandomInt(100, 700), \"order_bar\": getRandomInt(100, 700), \"order_promo\": getRandomInt(100, 700), \"order_discount\": getRandomInt(100, 700), \"sales_total\": getRandomInt(100, 700), \"sales_food\": getRandomInt(100, 700), \"sales_bar\": getRandomInt(100, 700), \"sales_promo\": getRandomInt(100, 700), \"sales_discount\": getRandomInt(100, 700)}\n\t\t\t],\n\t\t\t\"graph\": {\n\t\t\t\t\"promo\": [\n\t\t\t\t\t{label: '01/01/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/02/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/03/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/04/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/05/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/06/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/07/2021', data: getRandomInt(1, 20)}\n\t\t\t\t],\n\t\t\t\t\"discount\": [\n\t\t\t\t\t{label: '01/01/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/02/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/03/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/04/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/05/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/06/2021', data: getRandomInt(1, 20)},\n\t\t\t\t\t{label: '01/07/2021', data: getRandomInt(1, 20)}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t\t// ------------------------------------------------------\n\t\tsetDashboardData(res);\n\t};\n\n\n\n\treturn (\n\t\t<ContextFilter.Provider value={{ \n\t\t\t\t\t\t\t\t\tstateStart: [startDate, setStartDate], \n\t\t\t\t\t\t\t\t\tstateEnd: [endDate, setEndDate], \n\t\t\t\t\t\t\t\t\tvalueInitialStore: store, \n\t\t\t\t\t\t\t\t\tstateCurrentStore: [selectedStore, setSelectedStore], \n\t\t\t\t\t\t\t\t\tstateVisible: [visible, setVisible],\n\t\t\t\t\t\t\t\t\tstateDashboardData: [dashboardData, setDashboardData],\n\t\t\t\t\t\t\t\t\tfuncDisableFilters: setDisable, \n\t\t\t\t\t\t\t\t\tfuncEnableFilters: setEnable,\n\t\t\t\t\t\t\t\t\tfuncUpdateData: updateData\n\t\t\t\t\t\t\t\t  }}\n\t\t>\n\t\t\t{props.children}\n\t\t</ContextFilter.Provider>\n\t);\n}\n\nexport default ContextFilterProvider;\n"]},"metadata":{},"sourceType":"module"}