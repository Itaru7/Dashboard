{"ast":null,"code":"var _jsxFileName = \"/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/components/filter/ContextFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport Axios from 'axios';\nimport config from '../config.json';\nimport { useAsync } from 'react-async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextFilter = /*#__PURE__*/createContext();\n\nconst ContextFilterProvider = props => {\n  _s();\n\n  // get store information from accessed URL ex) https://fsai-dash.com/HQ returns HQ.\n  const storeFromUrl = window.location.href.split('/').slice(-1)[0];\n  const today = new Date();\n  const thisyear = today.getFullYear();\n  const thismonth = today.getMonth();\n  const thisdate = today.getDate();\n  const lastWeekStart = thisdate - today.getDay() - 7;\n  const lastWeekEnd = lastWeekStart + 6;\n  const [startDate, setStartDate] = useState(new Date(thisyear, thismonth, lastWeekStart));\n  const [endDate, setEndDate] = useState(new Date(thisyear, thismonth, lastWeekEnd));\n  const store = useState(storeFromUrl)[0];\n  const [selectedStore, setSelectedStore] = useState(storeFromUrl);\n  const [visible, setVisible] = useState(''); // Empty string means false, and all filter components are enabled by default.\n\n  const setEnable = () => {\n    setVisible('');\n  };\n\n  const setDisable = () => {\n    setVisible('disabled');\n  };\n\n  const sleep = millsec => {\n    return new Promise(resolve => setTimeout(resolve, millsec));\n  };\n\n  const updateData = async () => {\n    const response = await Axios(config.API_URL); // request API call here\t\n\n    await sleep(300);\n    return response;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContextFilter.Provider, {\n    value: {\n      stateStart: [startDate, setStartDate],\n      stateEnd: [endDate, setEndDate],\n      valueInitialStore: store,\n      stateCurrentStore: [selectedStore, setSelectedStore],\n      stateVisible: [visible, setVisible],\n      funcDisableFilters: setDisable,\n      funcEnableFilters: setEnable\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContextFilterProvider, \"oxiE0XJZVCtvtLOrncEnD5DfptA=\");\n\n_c = ContextFilterProvider;\nexport default ContextFilterProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextFilterProvider\");","map":{"version":3,"sources":["/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/components/filter/ContextFilter.js"],"names":["React","createContext","useState","Axios","config","useAsync","ContextFilter","ContextFilterProvider","props","storeFromUrl","window","location","href","split","slice","today","Date","thisyear","getFullYear","thismonth","getMonth","thisdate","getDate","lastWeekStart","getDay","lastWeekEnd","startDate","setStartDate","endDate","setEndDate","store","selectedStore","setSelectedStore","visible","setVisible","setEnable","setDisable","sleep","millsec","Promise","resolve","setTimeout","updateData","response","API_URL","stateStart","stateEnd","valueInitialStore","stateCurrentStore","stateVisible","funcDisableFilters","funcEnableFilters","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,EAAnC;;AACP,MAAMM,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACxC;AACA,QAAMC,YAAY,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,CAAC,CAAvC,EAA0C,CAA1C,CAArB;AACA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAjB;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACK,QAAN,EAAlB;AACA,QAAMC,QAAQ,GAAGN,KAAK,CAACO,OAAN,EAAjB;AACA,QAAMC,aAAa,GAAGF,QAAQ,GAAGN,KAAK,CAACS,MAAN,EAAX,GAA4B,CAAlD;AACA,QAAMC,WAAW,GAAGF,aAAa,GAAG,CAApC;AAEA,QAAM,CAAEG,SAAF,EAAaC,YAAb,IAA8BzB,QAAQ,CAAC,IAAIc,IAAJ,CAASC,QAAT,EAAmBE,SAAnB,EAA8BI,aAA9B,CAAD,CAA5C;AACA,QAAM,CAAEK,OAAF,EAAWC,UAAX,IAA0B3B,QAAQ,CAAC,IAAIc,IAAJ,CAASC,QAAT,EAAmBE,SAAnB,EAA8BM,WAA9B,CAAD,CAAxC;AACA,QAAMK,KAAK,GAAG5B,QAAQ,CAACO,YAAD,CAAR,CAAuB,CAAvB,CAAd;AACA,QAAM,CAAEsB,aAAF,EAAiBC,gBAAjB,IAAsC9B,QAAQ,CAACO,YAAD,CAApD;AACA,QAAM,CAAEwB,OAAF,EAAWC,UAAX,IAA0BhC,QAAQ,CAAC,EAAD,CAAxC,CAdwC,CAcO;;AAE/C,QAAMiC,SAAS,GAAG,MAAM;AAAED,IAAAA,UAAU,CAAC,EAAD,CAAV;AAAiB,GAA3C;;AACA,QAAME,UAAU,GAAG,MAAM;AAAEF,IAAAA,UAAU,CAAC,UAAD,CAAV;AAAyB,GAApD;;AACA,QAAMG,KAAK,GAAIC,OAAD,IAAa;AAAE,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAjC,CAAP;AAA4D,GAAzF;;AACA,QAAMI,UAAU,GAAG,YAAW;AAC7B,UAAMC,QAAQ,GAAG,MAAMxC,KAAK,CAACC,MAAM,CAACwC,OAAR,CAA5B,CAD6B,CACkB;;AAC/C,UAAMP,KAAK,CAAC,GAAD,CAAX;AACA,WAAOM,QAAP;AACA,GAJD;;AAMA,sBACC,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACxBE,MAAAA,UAAU,EAAE,CAACnB,SAAD,EAAYC,YAAZ,CADY;AAExBmB,MAAAA,QAAQ,EAAE,CAAClB,OAAD,EAAUC,UAAV,CAFc;AAGxBkB,MAAAA,iBAAiB,EAAEjB,KAHK;AAIxBkB,MAAAA,iBAAiB,EAAE,CAACjB,aAAD,EAAgBC,gBAAhB,CAJK;AAKxBiB,MAAAA,YAAY,EAAE,CAAChB,OAAD,EAAUC,UAAV,CALU;AAMxBgB,MAAAA,kBAAkB,EAAEd,UANI;AAOxBe,MAAAA,iBAAiB,EAAEhB;AAPK,KAA/B;AAAA,cAUE3B,KAAK,CAAC4C;AAVR;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAvCD;;GAAM7C,qB;;KAAAA,qB;AAyCN,eAAeA,qBAAf","sourcesContent":["import React, {createContext, useState} from 'react';\nimport Axios from 'axios';\nimport config from '../config.json';\nimport { useAsync } from 'react-async';\n\nexport const ContextFilter = createContext();\nconst ContextFilterProvider = (props) => {\n\t// get store information from accessed URL ex) https://fsai-dash.com/HQ returns HQ.\n\tconst storeFromUrl = window.location.href.split('/').slice(-1)[0]\n\tconst today = new Date();\n\tconst thisyear = today.getFullYear();\n\tconst thismonth = today.getMonth(); \n\tconst thisdate = today.getDate();\n\tconst lastWeekStart = thisdate - today.getDay() - 7;\n\tconst lastWeekEnd = lastWeekStart + 6;\n\n\tconst [ startDate, setStartDate ] = useState(new Date(thisyear, thismonth, lastWeekStart));\n\tconst [ endDate, setEndDate ] = useState(new Date(thisyear, thismonth, lastWeekEnd));\n\tconst store = useState(storeFromUrl)[0];\n\tconst [ selectedStore, setSelectedStore ] = useState(storeFromUrl);\n\tconst [ visible, setVisible ] = useState('');  // Empty string means false, and all filter components are enabled by default.\n\t\n\tconst setEnable = () => { setVisible(''); };\n\tconst setDisable = () => { setVisible('disabled'); };\n\tconst sleep = (millsec) => { return new Promise(resolve => setTimeout(resolve, millsec))};\n\tconst updateData = async() => {\n\t\tconst response = await Axios(config.API_URL);  // request API call here\t\n\t\tawait sleep(300);\n\t\treturn response;\n\t};\n\n\treturn (\n\t\t<ContextFilter.Provider value={{ \n\t\t\t\t\t\t\t\t\tstateStart: [startDate, setStartDate], \n\t\t\t\t\t\t\t\t\tstateEnd: [endDate, setEndDate], \n\t\t\t\t\t\t\t\t\tvalueInitialStore: store, \n\t\t\t\t\t\t\t\t\tstateCurrentStore: [selectedStore, setSelectedStore], \n\t\t\t\t\t\t\t\t\tstateVisible: [visible, setVisible],\n\t\t\t\t\t\t\t\t\tfuncDisableFilters: setDisable, \n\t\t\t\t\t\t\t\t\tfuncEnableFilters: setEnable\n\t\t\t\t\t\t\t\t  }}\n\t\t>\n\t\t\t{props.children}\n\t\t</ContextFilter.Provider>\n\t);\n}\n\nexport default ContextFilterProvider;\n"]},"metadata":{},"sourceType":"module"}