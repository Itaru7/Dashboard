{"ast":null,"code":"var _jsxFileName = \"/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport Filter from './components/filter/Filter';\nimport Dashboard from './components/dashboard/Dashboard';\nimport { FilterContext } from './contexts/FilterContext';\nimport { DashboardContext } from './contexts/DashboardContext';\nimport Axios from 'axios';\nimport GetData from './api/app';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { enableFilter, disableFilter } from './redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    start,\n    end,\n    store,\n    selectedStore\n  } = useContext(FilterContext);\n  const [startDate, setStartDate] = start;\n  const [endDate, setEndDate] = end;\n  const [defaultStore, setDefaultStore] = store;\n  const [newSelectedStore, setNewSelectedStore] = selectedStore;\n  const {\n    data\n  } = useContext(DashboardContext);\n  const [newData, setNewData] = data;\n  const dispatch = useDispatch();\n\n  async function test() {\n    let a = await GetData();\n    setNewData(a.data.results[0]);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(enableFilter()),\n      children: \"Enable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: test,\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Default(URL) Store: \", defaultStore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Selected Store: \", newSelectedStore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"6ubDQaanIKazUaJ9M87eqCHlIS0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/itaru/fujisoft/clients/round1/dashbored/frontend/src/App.js"],"names":["useState","useContext","Filter","Dashboard","FilterContext","DashboardContext","Axios","GetData","useSelector","useDispatch","enableFilter","disableFilter","App","start","end","store","selectedStore","startDate","setStartDate","endDate","setEndDate","defaultStore","setDefaultStore","newSelectedStore","setNewSelectedStore","data","newData","setNewData","dispatch","test","a","results"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,iBAA5C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAuCf,UAAU,CAACG,aAAD,CAAvD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BL,KAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,GAA9B;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCP,KAAxC;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CR,aAAhD;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAWxB,UAAU,CAACI,gBAAD,CAA3B;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBF,IAA9B;AAEA,QAAMG,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,iBAAeoB,IAAf,GAAsB;AACrB,QAAIC,CAAC,GAAG,MAAMvB,OAAO,EAArB;AACAoB,IAAAA,UAAU,CAACG,CAAC,CAACL,IAAF,CAAOM,OAAP,CAAe,CAAf,CAAD,CAAV;AACA;;AAAA;AAGD,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAQ,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAAClB,YAAY,EAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAQ,MAAA,OAAO,EAAGmB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,0CAAyBR,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAA,sCAAqBE,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;GA5BQX,G;UAUSH,W;;;KAVTG,G;AA8BT,eAAeA,GAAf","sourcesContent":["import { useState, useContext} from 'react';\nimport Filter from './components/filter/Filter';\nimport Dashboard from './components/dashboard/Dashboard';\nimport { FilterContext } from './contexts/FilterContext';\nimport { DashboardContext } from './contexts/DashboardContext';\nimport Axios from 'axios';\nimport GetData from './api/app';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { enableFilter, disableFilter } from './redux/actions';\n\nfunction App() {\n\tconst { start, end, store, selectedStore } = useContext(FilterContext);\n\tconst [startDate, setStartDate] = start;\n\tconst [endDate, setEndDate] = end;\n\tconst [defaultStore, setDefaultStore] = store;\n\tconst [newSelectedStore, setNewSelectedStore] = selectedStore;\n\n\tconst { data } = useContext(DashboardContext);\n\tconst [newData, setNewData] = data;\n\t\n\tconst dispatch = useDispatch();\n\n\tasync function test() {\n\t\tlet a = await GetData();\n\t\tsetNewData(a.data.results[0]);\n\t};\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Filter />\n\t\t\t<Dashboard />\n\t\t\t<button onClick={() => dispatch(enableFilter())}>Enable</button>\n\t\t\t<button onClick={ test }>Filter</button>\n\t\t\t<p> Default(URL) Store: {defaultStore}</p>\n\t\t\t<p> Selected Store: {newSelectedStore}</p>\n\t\t</div>\n\t  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}